#!/usr/bin/env python
# encoding: utf-8

from waflib import Logs


def gtest_results(bld):
    lst = getattr(bld, 'utest_results', [])
    if not lst:
        return
    for (f, code, out, err) in lst:
        if not code:
            continue
        try:
            output = str(out, 'utf-8').split('\n')
        except:
            output = str(out).split('\n')  # py2
        for i, line in enumerate(output):
            if '[ RUN      ]' in line:
                i += 1
                if '    OK ]' in output[i]:
                    continue
                while not '[ ' in output[i]:
                    Logs.warn(output[i])
                    i += 1
            elif ' PASSED  ]' in line:
                Logs.info(line)
            elif ' FAILED  ]' in line:
                Logs.error(line)


def build(bld):
    if bld.env.LIB_GTEST and bld.env.LIB_GMOCK:
        bld.add_post_fun(gtest_results)
        for dir in ('filesystem',):
            bld.program(
                target       = dir + '-test',
                features     = 'cpplint test',
                includes     = '.. ../include',
                source       = bld.path.ant_glob(dir + '/**/*.cpp'),
                use          = 'GTEST GMOCK GCOV BOOST kodama_' + dir)
